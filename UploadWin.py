#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Mon Sep  5 12:45:18 2011

import wx
import cloud
import os
# begin wxGlade: extracode
# end wxGlade



class UploadWin(wx.Frame):

    def __init__(self, *args, **kwds):
        # begin wxGlade: UploadWin.__init__
        kwds["style"] = wx.MINIMIZE_BOX | wx.MAXIMIZE_BOX | wx.SYSTEM_MENU | wx.CAPTION | wx.CLOSE_BOX | wx.CLIP_CHILDREN
        wx.Frame.__init__(self, *args, **kwds)
        AUTH_FILE = os.path.join(os.path.expanduser("~"), ".LinSnap", "auth.conf")
        self.files = []
        self.main_panel = wx.Panel(self, -1)
        self.auth_label = wx.StaticText(self.main_panel, -1, "Authentification Details:")
        self.user_label = wx.StaticText(self.main_panel, -1, "Username:")
        self.username_txt = wx.TextCtrl(self.main_panel, -1, "")
        self.passwd_label = wx.StaticText(self.main_panel, -1, "Password:")
        self.passwd_txt = wx.TextCtrl(self.main_panel, -1, "")
        self.service_box = wx.RadioBox(self.main_panel, -1, "Service", choices=["Ubuntu One", "CloudApp"], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.upload_bt = wx.Button(self.main_panel, -1, "Upload")
        self.cancel_bt = wx.Button(self.main_panel, -1, "Cancel")

        self.__set_properties()
        self.__do_event_bindings()
        self.__do_layout()
        # end wxGlade

    def __do_event_bindings(self):
        self.Bind(wx.EVT_CLOSE, self.OnClose)
        self.cancel_bt.Bind(wx.EVT_BUTTON, self.OnClose)

        self.upload_bt.Bind(wx.EVT_BUTTON, self.OnUpload)
        
    def __set_properties(self):
        # begin wxGlade: UploadWin.__set_properties
        self.SetTitle("Upload")
        self.SetSize((412, 230))
        self.service_box.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: UploadWin.__do_layout
        main_sizer = wx.BoxSizer(wx.VERTICAL)
        control_sizer = wx.BoxSizer(wx.VERTICAL)
        bt_sz = wx.BoxSizer(wx.HORIZONTAL)
        auth_sizer = wx.BoxSizer(wx.VERTICAL)
        passwd_sizer = wx.BoxSizer(wx.HORIZONTAL)
        passwd_sz = wx.BoxSizer(wx.VERTICAL)
        usrnm_sizer = wx.BoxSizer(wx.HORIZONTAL)
        txt_ctrl_sz = wx.BoxSizer(wx.VERTICAL)
        control_sizer.Add(self.auth_label, 0, wx.EXPAND, 0)
        usrnm_sizer.Add(self.user_label, 0, wx.ALL, 0)
        txt_ctrl_sz.Add(self.username_txt, 0, wx.ALL|wx.EXPAND, 0)
        usrnm_sizer.Add(txt_ctrl_sz, 1, wx.EXPAND, 0)
        auth_sizer.Add(usrnm_sizer, 1, wx.EXPAND, 0)
        passwd_sizer.Add(self.passwd_label, 0, 0, 0)
        passwd_sz.Add(self.passwd_txt, 0, wx.ALL|wx.EXPAND, 0)
        passwd_sizer.Add(passwd_sz, 1, wx.EXPAND, 0)
        auth_sizer.Add(passwd_sizer, 1, wx.EXPAND, 0)
        control_sizer.Add(auth_sizer, 1, wx.ALL|wx.EXPAND, 0)
        control_sizer.Add(self.service_box, 0, wx.ALL|wx.EXPAND, 0)
        bt_sz.Add(self.upload_bt, 0, 0, 0)
        bt_sz.AddSpacer(5)
        bt_sz.Add(self.cancel_bt, 0, 0, 0)
        control_sizer.Add(bt_sz, 0, wx.ALL|wx.ALIGN_RIGHT|wx.ALIGN_BOTTOM, 0)
        self.main_panel.SetSizer(control_sizer)
        main_sizer.Add(self.main_panel, 1, wx.ALL|wx.EXPAND, 0)
        self.SetSizer(main_sizer)
        self.Layout()
        # end wxGlade

    def OnClose(self, event):
        self.Hide()

    def SetUploadFiles(self, files):
        self.files = files
    
    def OnUpload(self, event):
        uploader = Uploader(self._ReadAuthFile(AUTH_FILE))
        uploader.Upload(self.files, self.service_box.GetStringSelection())

    def OnRadioBoxSelect(self, event):
        pass

    def _ReadAuthFile(self, auth_file):
        """
        returns a dict with the following layout:
        { "Ubuntu One": {"username" : one_username, "password" : one_password},
        "CloudApp" : {"username": cloud_username, "password" : cloud_password}}
        """

        if os.path.exists(auth_file):
            with open(auth_file, "r") as auth:
                return eval(auth.read())
        else:
            with open(auth_file, "w") as auth:
                auth.write('{"Ubuntu One": {"username":"", "password":""}, "CloudApp": {"username":"", "password":""}}')
            return { "Ubuntu One": {"username":"", "password":""}, "CloudApp": {"username":"", "password":""}}
    def _WriteAuthFile(self):
        pass

# end of class UploadWin
class Uploader:
    def __init__(self, auth_dict):
        self.__action_dict = { "Ubuntu One": self.UploadToUbuntuOne, "CloudApp": self.UploadToCloudApp}
        self.__auth_dict = auth_dict
        self.cloud_api = None
        self.ubuntu_one_api = None
        if auth_dict["CloudApp"]["username"]:
            self.cloud_api = cloud.Cloud()
            self.cloud_api.auth(auth_dict["CloudApp"]["username"],auth_dict["CloudApp"]["password"])

        # if auth_dict["Ubuntu One"]["username"]:
        #     self.cloud_api = cloud.Cloud()
        #     self.cloud_api.auth(auth_dict["Ubuntu One"]["username"],auth_dict["Ubuntu One"]["password"])


    def SetAuthDict(self, auth_dict):
        self.__auth_dict = auth_dict

    def _Upload(self, files , service = "CloudApp"):
        return self.__action_dict[service](auth_dict, files)

    def _UploadToCloudApp(self, files):
        for f in files:
            if not self.cloud_api.upload_file(f):
                pass
    
    
    def _UploadToUbuntuOne(self, files ):
        return True

if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    upload_win = UploadWin(None, -1, "")
    app.SetTopWindow(upload_win)
    upload_win.Show()
    app.MainLoop()
